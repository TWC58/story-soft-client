{"version":3,"sources":["api/index.js","auth/index.js","store/index.js","components/SearchDropdown.js","components/SearchToolbar.js","components/CreatePostButton.js","components/AppBanner.js","components/StoryCard.js","components/Copyright.js","styling/styles.js","components/ExploreCard.js","components/ExploreTag.js","components/Explore.js","components/Following.js","components/HomeScreen.js","components/RegisterScreen.js","components/LoginScreen.js","components/Top5ItemEdit.js","components/WorkspaceScreen.js","components/ModalAlert.js","components/ModalDelete.js","components/MostPopular.js","components/NotPublished.js","components/ProfileScreen.js","styling/themes.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","withCredentials","api","create","baseURL","apis","createTop5List","payload","post","getMyTop5Lists","get","getAllPublishedTop5Lists","getAllTop5Lists","getTop5ListsByUsername","username","updateTop5ListById","id","put","deleteTop5ListById","delete","getTop5ListById","getCommunityTop5Lists","viewList","viewCommunityList","likeList","unlikeList","getLoggedIn","registerUser","loginUser","logout","postComment","AuthContext","createContext","console","log","AuthActionType","AuthContextProvider","props","useState","user","loggedIn","error","auth","setAuth","history","useHistory","useEffect","authReducer","action","type","guestUser","firstName","lastName","email","undoGuest","a","catch","err","response","status","data","userData","store","errorMessage","push","login","userCreds","setError","clearError","userHasLike","listId","likes","i","length","like","userHasDislike","handleProfile","Provider","value","children","GlobalStoreContext","ListViewMode","ListSortMode","MediaType","GlobalStoreActionType","GlobalStoreContextProvider","mediaType","lists","allLists","currentList","editActive","listMarkedForDeletion","listViewMode","search","setStore","useContext","storeReducer","idNamePairs","top5List","newListCounter","isListNameEditActive","isItemEditActive","goHome","clearListsForUserView","hasPublishedListName","name","published","toLowerCase","reloadLists","loadMyLists","loadCommunityLists","success","top5Lists","loadPublishedLists","loadListsByUsername","list","_id","views","searchLists","searchedLists","filter","startsWith","sortLists","sortMode","sortedLists","sort","first","second","firstTime","Date","parse","createdAt","dislikes","lType","listType","forEach","index","splice","changeListName","newName","updateList","getListPairs","getTop5ListPairs","pairsArray","closeCurrentList","createNewList","items","newList","markListForDeletion","deleteList","listToDelete","deleteMarkedList","unmarkListForDeletion","setCurrentList","clearCurrentList","initState","addMoveItemTransaction","start","end","addUpdateItemTransaction","newText","moveItem","temp","updateCurrentList","updateItem","newItem","updateListName","publishList","message","comment","creator","created","now","undo","redo","canUndo","canRedo","setIsListNameEditActive","setIsItemEditActive","options","SearchDropdown","theme","useTheme","React","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","open","Boolean","List","component","sx","bgcolor","palette","primary","dark","ListItem","button","undefined","onClick","event","currentTarget","ListItemText","secondary","Menu","onClose","MenuListProps","role","map","option","MenuItem","disabled","selected","handleMenuItemClick","Search","styled","position","borderRadius","shape","backgroundColor","alpha","common","white","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","SearchToolbar","Box","flexGrow","Toolbar","className","onKeyPress","code","target","alert","placeholder","inputProps","CreatePostButton","node","loadCSS","document","querySelector","head","firstChild","parentNode","removeChild","IconButton","size","edge","Icon","baseClassName","fontSize","AppBanner","isMenuOpen","handleMenuClose","handleLogout","menuId","menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","to","Image","newPostButton","Stack","AppBar","style","SvgIcon","d","xs","md","src","srcSet","StoryCard","Copyright","Typography","variant","align","Link","href","getFullYear","useStyles","makeStyles","exploreListHeader","exploreCard","marginRight","marginBottom","marginTop","p","ExploreCard","fontFamily","light","cursor","fontWeight","title","author","description","pt","ExploreTag","tag","posts","main","Explore","exploreTags","margin","flexDirection","Following","HomeScreen","classes","exploreListCard","examplePost","imageUrl","sampleExploreListTags1","sampleExploreListTags2","sampleExploreListTags3","sampleFollowingList","RegisterScreen","Container","maxWidth","CssBaseline","Avatar","m","noValidate","onSubmit","preventDefault","formData","FormData","password","passwordVerify","mt","Grid","container","item","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","Button","mb","createTheme","SignIn","ThemeProvider","FormControlLabel","control","Checkbox","Top5ItemEdit","key","text","currentText","setText","onChange","defaultValue","InputLabelProps","WorkspaceScreen","currentListNameText","setListNameText","editItems","j","isIllegalItemName","StyledModal","ModalUnstyled","Backdrop","top","left","transform","border","boxShadow","ModalAlert","handleClose","BackdropComponent","ModalDelete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","MostPopular","maxHeight","overflow","NotPublished","ProfileScreen","setEditActive","bio","setBio","sampleList","topMargin","textAlign","alignContent","paddingTop","TextareaAutosize","maxRows","e","overflowY","comicTheme","responsiveFontSizes","components","div","App","path","exact","LoginScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0547be6.chunk.js","sourcesContent":["/*\r\n    This is our http api, which we use to send requests to\r\n    our back-end API. Note we`re using the Axios library\r\n    for doing this, which is an easy to use AJAX-based\r\n    library. We could (and maybe should) use Fetch, which\r\n    is a native (to browsers) standard, but Axios is easier\r\n    to use when sending JSON back and forth and it`s a Promise-\r\n    based API which helps a lot with asynchronous communication.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:4000/api',\r\n})\r\n\r\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\r\n// REQUEST METHOD (like get) AND PATH (like /top5list). SOME ALSO\r\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\r\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\r\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\r\n// CUSTOM FILTERS FOR QUERIES\r\nexport const createTop5List = (payload) => api.post(`/top5list/`, payload)\r\nexport const getMyTop5Lists = () => api.get(`/mytop5lists`)\r\nexport const getAllPublishedTop5Lists = () => api.get(`/publishedtop5lists`)\r\nexport const getAllTop5Lists = () => api.get(`/top5lists/`)\r\nexport const getTop5ListsByUsername = (username) => api.get(`/top5lists/user/${username}`)\r\nexport const updateTop5ListById = (id, payload) => api.put(`/top5list/${id}`, payload)\r\nexport const deleteTop5ListById = (id) => api.delete(`/top5list/${id}`)\r\nexport const getTop5ListById = (id) => api.get(`/top5list/${id}`)\r\nexport const getCommunityTop5Lists = () => api.get(`/community/top5lists`);\r\nexport const viewList = (id) => api.get(`/top5list/view/${id}`);\r\nexport const viewCommunityList = (id) => api.get(`/community/top5list/view/${id}`);\r\nexport const likeList = (id, payload) => api.post(`/top5list/like/${id}`, payload);\r\nexport const unlikeList = (id, payload) => api.post(`/top5list/unlike/${id}`, payload);\r\n\r\nexport const getLoggedIn = () => api.get(`/loggedIn/`);\r\nexport const registerUser = (payload) => api.post(`/register/`, payload)\r\nexport const loginUser = (payload) => api.post(`/login/`, payload)\r\nexport const logout = () => api.get(`/logout/`)\r\n\r\nexport const postComment = (id, payload) => api.post(`/top5list/comment/${id}`, payload);\r\n\r\nconst apis = {\r\n    createTop5List,\r\n    getMyTop5Lists,\r\n    getAllPublishedTop5Lists,\r\n    getAllTop5Lists,\r\n    getTop5ListsByUsername,\r\n    updateTop5ListById,\r\n    deleteTop5ListById,\r\n    getTop5ListById,\r\n    getCommunityTop5Lists,\r\n    viewList,\r\n    viewCommunityList,\r\n    likeList,\r\n    unlikeList,\r\n\r\n    getLoggedIn,\r\n    registerUser,\r\n    loginUser,\r\n    logout,\r\n\r\n    postComment\r\n}\r\n\r\nexport default apis\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport api from '../api'\r\n\r\nconst AuthContext = createContext();\r\nconsole.log(\"create AuthContext: \" + AuthContext);\r\n\r\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\r\nexport const AuthActionType = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\",\r\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\r\n    REGISTER_USER: \"REGISTER_USER\",\r\n    ERROR: \"ERROR\"\r\n}\r\n\r\nfunction AuthContextProvider(props) {\r\n\r\n    const [auth, setAuth] = useState({\r\n        user: null,\r\n        loggedIn: false,\r\n        error: null\r\n    });\r\n    const history = useHistory();  \r\n\r\n    useEffect(() => {\r\n        auth.getLoggedIn();\r\n    }, []);\r\n\r\n    const authReducer = (action) => {\r\n        const { type, payload } = action;\r\n        switch (type) {\r\n            case AuthActionType.LOGIN: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: true,\r\n                    error: payload.error\r\n                });\r\n            }\r\n            case AuthActionType.LOGOUT: {\r\n                return setAuth({\r\n                    user: null,\r\n                    loggedIn: false,\r\n                    error: payload.error\r\n                });\r\n            }\r\n            case AuthActionType.GET_LOGGED_IN: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: payload.loggedIn,\r\n                    error: auth.error\r\n                });\r\n            }\r\n            case AuthActionType.REGISTER_USER: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: true,\r\n                    error: auth.error\r\n                })\r\n            }\r\n            case AuthActionType.ERROR: {\r\n                return setAuth({\r\n                    user: auth.user,\r\n                    loggedIn: auth.loggedIn,\r\n                    error: payload.error\r\n                })\r\n            }\r\n            default:\r\n                return auth;\r\n        }\r\n    }\r\n\r\n    auth.guestUser = () => {\r\n        return authReducer({\r\n            type: AuthActionType.GET_LOGGED_IN,\r\n            payload: {\r\n                loggedIn: false,\r\n                user: {\r\n                    username: \"guest\",\r\n                    firstName: \"guest\",\r\n                    lastName: \"\",\r\n                    email: \"null@null.com\",\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    auth.undoGuest = () => {\r\n        return authReducer({\r\n            type: AuthActionType.GET_LOGGED_IN,\r\n            payload: {\r\n                loggedIn: false,\r\n                user: null\r\n            }\r\n        });\r\n    }\r\n\r\n    auth.getLoggedIn = async function () {\r\n        const response = await api.getLoggedIn().catch((err) => {\r\n            return authReducer({\r\n                type: AuthActionType.GET_LOGGED_IN,\r\n                payload: {\r\n                    loggedIn: false,\r\n                    user: null\r\n                }\r\n            });\r\n        });\r\n        if (typeof response !== 'undefined' && response.status === 200) {\r\n            authReducer({\r\n                type: AuthActionType.GET_LOGGED_IN,\r\n                payload: {\r\n                    loggedIn: response.data.loggedIn,\r\n                    user: response.data.user\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    auth.registerUser = async function(userData, store) {\r\n        const response = await api.registerUser(userData).catch((err) => {\r\n            authReducer({\r\n                type: AuthActionType.LOGOUT,\r\n                payload: {\r\n                    user: null,\r\n                    error: err.response.data.errorMessage\r\n                }\r\n            })\r\n            return err.response;\r\n        });      \r\n        if (response.status === 200) {\r\n            authReducer({\r\n                type: AuthActionType.REGISTER_USER,\r\n                payload: {\r\n                    user: response.data.user\r\n                }\r\n            })\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    auth.login = async function(userCreds, store) {\r\n        const response = await api.loginUser(userCreds).catch((err) => {\r\n            authReducer({\r\n                type: AuthActionType.LOGOUT,\r\n                payload: {\r\n                    user: null,\r\n                    error: \"ERROR: Credentials entered do not match any user.\"\r\n                }\r\n            })\r\n        });      \r\n        \r\n        if (typeof response !== 'undefined' && response.status === 200) {\r\n            authReducer({\r\n                type: AuthActionType.LOGIN,\r\n                payload: {\r\n                    user: response.data.user,\r\n                    error: null\r\n                }\r\n            })\r\n            history.push(\"/\");\r\n        } else {\r\n            authReducer({\r\n                type: AuthActionType.LOGOUT,\r\n                payload: {\r\n                    user: null,\r\n                    error: \"ERROR: Credentials entered do not match any user.\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    auth.logout = async function() {\r\n        const response = await api.logout();\r\n\r\n        if (response.status === 200) {\r\n            authReducer({\r\n                type: AuthActionType.LOGOUT,\r\n                payload: {\r\n                    error: null\r\n                }\r\n            })\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    auth.setError = (errorMessage) => {\r\n        authReducer({\r\n            type: AuthActionType.ERROR,\r\n            payload: {\r\n                error: errorMessage\r\n            }\r\n        });\r\n    }\r\n\r\n    auth.clearError = () => {\r\n        authReducer({\r\n            type: AuthActionType.ERROR,\r\n            payload: {\r\n                error: null\r\n            }\r\n        });\r\n    }\r\n\r\n    auth.userHasLike = (listId) => {\r\n        if (auth.user.likes) {\r\n            for (let i = 0; i < auth.user.likes.length; i++) {\r\n                if (auth.user.likes[i].listId === listId && auth.user.likes[i].like) \r\n                    return true;\r\n            }\r\n        } \r\n        \r\n        return false;\r\n    }\r\n\r\n    auth.userHasDislike = (listId) => {\r\n        if (auth.user.likes) {\r\n            for (let i = 0; i < auth.user.likes.length; i++) {\r\n                if (auth.user.likes[i].listId === listId && !auth.user.likes[i].like)\r\n                    return true;\r\n            }\r\n        } \r\n        \r\n        return false;\r\n    }\r\n\r\n    auth.handleProfile = (type) => {\r\n        history.push('/' + type + '/profile');\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            auth\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;\r\nexport { AuthContextProvider };","import { createContext, useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport api from '../api'\r\nimport AuthContext from '../auth'\r\n/*\r\n    This is our global data store. Note that it uses the Flux design pattern,\r\n    which makes use of things like actions and reducers. \r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n\r\n// THIS IS THE CONTEXT WE'LL USE TO SHARE OUR STORE\r\nexport const GlobalStoreContext = createContext({});\r\n\r\nexport const ListViewMode = {\r\n    MY_LISTS: \"MY_LISTS\",\r\n    USER_LISTS: \"USER_LISTS\",\r\n    PUBLISHED_LISTS: \"PUBLISHED_LISTS\",\r\n    COMMUNITY_LISTS: \"COMMUNITY_LISTS\"\r\n}\r\n\r\nexport const ListSortMode = {\r\n    DATE_NEWEST: \"DATE_NEWEST\",\r\n    DATE_OLDEST: \"DATE_OLDEST\",\r\n    VIEWS: \"VIEWS\",\r\n    LIKES: \"LIKES\",\r\n    DISLIKES: \"DISLIKES\"\r\n}\r\n\r\nexport const MediaType = {\r\n    COMIC: \"COMIC\",\r\n    STORY: \"STORY\"\r\n}\r\n\r\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR GLOBAL\r\n// DATA STORE STATE THAT CAN BE PROCESSED\r\nexport const GlobalStoreActionType = {\r\n    CHANGE_LIST_NAME: \"CHANGE_LIST_NAME\",\r\n    CLOSE_CURRENT_LIST: \"CLOSE_CURRENT_LIST\",\r\n    CREATE_NEW_LIST: \"CREATE_NEW_LIST\",\r\n    MARK_LIST_FOR_DELETION: \"MARK_LIST_FOR_DELETION\",\r\n    UNMARK_LIST_FOR_DELETION: \"UNMARK_LIST_FOR_DELETION\",\r\n    SET_CURRENT_LIST: \"SET_CURRENT_LIST\",\r\n    SET_ITEM_EDIT_ACTIVE: \"SET_ITEM_EDIT_ACTIVE\",\r\n    SET_LIST_NAME_EDIT_ACTIVE: \"SET_LIST_NAME_EDIT_ACTIVE\",\r\n    LOAD_LISTS: \"LOAD_LISTS\",\r\n    SEARCH_LISTS: \"SEARCH_LISTS\"\r\n}\r\n\r\n// WITH THIS WE'RE MAKING OUR GLOBAL DATA STORE\r\n// AVAILABLE TO THE REST OF THE APPLICATION\r\nfunction GlobalStoreContextProvider(props) {\r\n    // THESE ARE ALL THE THINGS OUR DATA STORE WILL MANAGE\r\n    const [store, setStore] = useState({\r\n        mediaType: MediaType.STORY,\r\n        lists: [],\r\n        allLists: [],\r\n        currentList: null,\r\n        editActive: false,\r\n        listMarkedForDeletion: null,\r\n        listViewMode: null,\r\n        search: \"\"\r\n    });\r\n    const history = useHistory();\r\n\r\n    // SINCE WE'VE WRAPPED THE STORE IN THE AUTH CONTEXT WE CAN ACCESS THE USER HERE\r\n    const { auth } = useContext(AuthContext);\r\n\r\n    // HERE'S THE DATA STORE'S REDUCER, IT MUST\r\n    // HANDLE EVERY TYPE OF STATE CHANGE\r\n    const storeReducer = (action) => {\r\n        const { type, payload } = action;\r\n        switch (type) {\r\n            // LOADS A SET OF LISTS\r\n            case GlobalStoreActionType.LOAD_LISTS: {\r\n                return setStore({\r\n                    lists: payload.lists,\r\n                    allLists: payload.lists,\r\n                    currentList: null,\r\n                    editActive: false,\r\n                    listMarkedForDeletion: null,\r\n                    listViewMode: payload.listViewMode,\r\n                    search: \"\"\r\n                });\r\n            }\r\n            // SEARCH A SET OF LISTS\r\n            case GlobalStoreActionType.SEARCH_LISTS: {\r\n                return setStore({\r\n                    lists: payload.lists,\r\n                    allLists: store.allLists,\r\n                    currentList: null,\r\n                    editActive: false,\r\n                    listMarkedForDeletion: null,\r\n                    listViewMode: store.listViewMode,\r\n                    search: payload.search\r\n                });\r\n            }\r\n            // LIST UPDATE OF ITS NAME\r\n            case GlobalStoreActionType.CHANGE_LIST_NAME: {\r\n                return setStore({\r\n                    idNamePairs: payload.idNamePairs,\r\n                    currentList: payload.top5List,\r\n                    newListCounter: store.newListCounter,\r\n                    isListNameEditActive: false,\r\n                    isItemEditActive: false,\r\n                    listMarkedForDeletion: null\r\n                });\r\n            }\r\n            // STOP EDITING THE CURRENT LIST\r\n            case GlobalStoreActionType.CLOSE_CURRENT_LIST: {\r\n                return setStore({\r\n                    lists: store.lists,\r\n                    allLists: store.allLists,\r\n                    currentList: null,\r\n                    editActive: false,\r\n                    listMarkedForDeletion: store.listMarkedForDeletion,\r\n                    listViewMode: store.listViewMode,\r\n                    search: store.search\r\n                })\r\n            }\r\n            // CREATE A NEW LIST\r\n            case GlobalStoreActionType.CREATE_NEW_LIST: {\r\n                return setStore({\r\n                    lists: store.lists,\r\n                    allLists: store.allLists,\r\n                    currentList: payload,\r\n                    editActive: true,\r\n                    listMarkedForDeletion: null,\r\n                    listViewMode: store.listViewMode,\r\n                    search: store.search\r\n                })\r\n            }\r\n            // PREPARE TO DELETE A LIST\r\n            case GlobalStoreActionType.MARK_LIST_FOR_DELETION: {\r\n                return setStore({\r\n                    lists: store.lists,\r\n                    allLists: store.allLists,\r\n                    currentList: null,\r\n                    editActive: true,\r\n                    listMarkedForDeletion: payload,\r\n                    listViewMode: store.listViewMode,\r\n                    search: store.search\r\n                });\r\n            }\r\n            // PREPARE TO DELETE A LIST\r\n            case GlobalStoreActionType.UNMARK_LIST_FOR_DELETION: {\r\n                return setStore({\r\n                    lists: store.lists,\r\n                    allLists: store.allLists,\r\n                    currentList: null,\r\n                    editActive: false,\r\n                    listMarkedForDeletion: null,\r\n                    listViewMode: store.listViewMode,\r\n                    search: store.search\r\n                });\r\n            }\r\n            // UPDATE A LIST\r\n            case GlobalStoreActionType.SET_CURRENT_LIST: {\r\n                return setStore({\r\n                    lists: store.lists,\r\n                    allLists: store.allLists,\r\n                    currentList: payload,\r\n                    editActive: true,\r\n                    listMarkedForDeletion: null,\r\n                    listViewMode: store.listViewMode,\r\n                    search: store.search\r\n                });\r\n            }\r\n            // START EDITING A LIST ITEM\r\n            case GlobalStoreActionType.SET_ITEM_EDIT_ACTIVE: {\r\n                return setStore({\r\n                    idNamePairs: store.idNamePairs,\r\n                    currentList: store.currentList,\r\n                    newListCounter: store.newListCounter,\r\n                    isListNameEditActive: false,\r\n                    isItemEditActive: payload,\r\n                    listMarkedForDeletion: null\r\n                });\r\n            }\r\n            // START EDITING A LIST NAME\r\n            case GlobalStoreActionType.SET_LIST_NAME_EDIT_ACTIVE: {\r\n                return setStore({\r\n                    idNamePairs: store.idNamePairs,\r\n                    currentList: payload,\r\n                    newListCounter: store.newListCounter,\r\n                    isListNameEditActive: true,\r\n                    isItemEditActive: false,\r\n                    listMarkedForDeletion: null\r\n                });\r\n            }\r\n            default:\r\n                return store;\r\n        }\r\n    }\r\n\r\n    // THESE ARE THE FUNCTIONS THAT WILL UPDATE OUR STORE AND\r\n    // DRIVE THE STATE OF THE APPLICATION. WE'LL CALL THESE IN \r\n    // RESPONSE TO EVENTS INSIDE OUR COMPONENTS.\r\n\r\n    store.goHome = () => {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    store.clearListsForUserView = () => {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.LOAD_LISTS,\r\n            payload: {\r\n                lists: [],\r\n                listViewMode: ListViewMode.USER_LISTS\r\n            }\r\n        });\r\n    }\r\n\r\n    store.hasPublishedListName = (name) => {\r\n        if (!store.allLists || store.listViewMode !== ListViewMode.MY_LISTS) {\r\n            auth.setError(\"ERROR: You must reload your personal lists to enable publishing\");\r\n            return true;\r\n        }\r\n\r\n        for (let i = 0; i < store.allLists.length; i++) {\r\n            if (store.allLists[i].published && store.allLists[i].name.toLowerCase() === name.toLowerCase())\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    store.reloadLists = async function () {\r\n        if (store.listViewMode === ListViewMode.MY_LISTS) {\r\n            store.loadMyLists();\r\n        }\r\n    }\r\n\r\n    store.loadCommunityLists = async function () {\r\n        let response = await api.getCommunityTop5Lists();\r\n        if (response.data.success) {\r\n            let top5Lists = response.data.data;\r\n            storeReducer({\r\n                type: GlobalStoreActionType.LOAD_LISTS,\r\n                payload: {\r\n                    lists: top5Lists,\r\n                    listViewMode: ListViewMode.COMMUNITY_LISTS\r\n                }\r\n            });\r\n        }\r\n        history.push(\"/\");\r\n    }\r\n\r\n    store.loadMyLists = async function () {\r\n        let response = await api.getMyTop5Lists();\r\n        if (response.data.success) {\r\n            let top5Lists = response.data.data;\r\n            // alert(top5Lists);\r\n            storeReducer({\r\n                type: GlobalStoreActionType.LOAD_LISTS,\r\n                payload: {\r\n                    lists: top5Lists,\r\n                    listViewMode: ListViewMode.MY_LISTS\r\n                }\r\n            });\r\n        }\r\n        history.push(\"/\");\r\n    }\r\n\r\n    store.loadPublishedLists = async function () {\r\n        let response = await api.getAllPublishedTop5Lists();\r\n        if (response.data.success) {\r\n            let top5Lists = response.data.data;\r\n            storeReducer({\r\n                type: GlobalStoreActionType.LOAD_LISTS,\r\n                payload: {\r\n                    lists: top5Lists,\r\n                    listViewMode: ListViewMode.PUBLISHED_LISTS\r\n                }\r\n            });\r\n        }\r\n        history.push(\"/\");\r\n    }\r\n\r\n    store.loadListsByUsername = async function (username) {\r\n        let response = await api.getTop5ListsByUsername(username);\r\n        if (response.data.success) {\r\n            let top5Lists = response.data.data;\r\n            storeReducer({\r\n                type: GlobalStoreActionType.LOAD_LISTS,\r\n                payload: {\r\n                    lists: top5Lists,\r\n                    listViewMode: ListViewMode.USER_LISTS\r\n                }\r\n            });\r\n            storeReducer({\r\n                type: GlobalStoreActionType.LOAD_LISTS,\r\n                payload: {\r\n                    lists: top5Lists,\r\n                    listViewMode: ListViewMode.USER_LISTS\r\n                }\r\n            });\r\n\r\n            // storeReducer({\r\n            //     type: GlobalStoreActionType.SEARCH_LISTS,\r\n            //     payload: {\r\n            //         lists: store.lists,\r\n            //         search: username\r\n            //     }\r\n            // });\r\n\r\n        }\r\n        history.push(\"/\");\r\n    }\r\n\r\n    store.viewList = async function (list) {\r\n        let response = await api.viewList(list._id);\r\n        if (response.data.success) {\r\n            list.views = list.views + 1;\r\n            return list;\r\n        }\r\n    }\r\n\r\n    store.viewCommunityList = async function (list) {\r\n        let response = await api.viewCommunityList(list._id).catch((err) => {\r\n            console.log(err);\r\n            if (err.response)\r\n                auth.setError(err.response.errorMessage);\r\n        });\r\n        if (response.data.success) {\r\n            list.views = list.views + 1;\r\n            return list;\r\n        }\r\n    }\r\n\r\n    store.searchLists = (search) => {\r\n        if (search === \"\") {\r\n            return storeReducer({\r\n                type: GlobalStoreActionType.SEARCH_LISTS,\r\n                payload: {\r\n                    lists: store.allLists,\r\n                    search: \"\"\r\n                }\r\n            });\r\n        }\r\n\r\n        let searchedLists = store.allLists.filter((list) => {\r\n            return list.name.toLowerCase().startsWith(search.toLowerCase());\r\n        });\r\n\r\n        storeReducer({\r\n            type: GlobalStoreActionType.SEARCH_LISTS,\r\n            payload: {\r\n                lists: searchedLists,\r\n                search: search\r\n            }\r\n        });\r\n    }\r\n\r\n    store.sortLists = (sortMode) => {\r\n        let sortedLists = store.lists.sort((first, second) => {\r\n            if (sortMode === ListSortMode.DATE_NEWEST) {\r\n                let firstTime = (first.published) ? Date.parse(first.published) : Date.parse(first.createdAt);\r\n                let secondTime = (second.published) ? Date.parse(second.published) : Date.parse(second.createdAt);\r\n                return secondTime - firstTime;\r\n            } else if (sortMode === ListSortMode.DATE_OLDEST) {\r\n                let firstTime = (first.published) ? Date.parse(first.published) : Date.parse(first.createdAt);\r\n                let secondTime = (second.published) ? Date.parse(second.published) : Date.parse(second.createdAt);\r\n\r\n                return firstTime - secondTime;\r\n            } else if (sortMode === ListSortMode.VIEWS) {\r\n                return second.views - first.views;\r\n            } else if (sortMode === ListSortMode.LIKES) {\r\n                return second.likes - first.likes;\r\n            } else if (sortMode === ListSortMode.DISLIKES) {\r\n                return second.dislikes - first.dislikes;\r\n            } \r\n            return 1;\r\n        });\r\n\r\n        storeReducer({\r\n            type: GlobalStoreActionType.SEARCH_LISTS,\r\n            payload: {\r\n                lists: sortedLists\r\n            }\r\n        });\r\n    }\r\n\r\n    store.likeList = async function (list, like) {\r\n        let lType = (store.listViewMode === ListViewMode.COMMUNITY_LISTS) ? \"community\" : \"normal\";\r\n        let response = await api.likeList(list._id, {like: like, listType: lType}).catch((err) => {\r\n            console.log(err);\r\n            if (err.response) {\r\n                auth.setError(\"Like failed!\");\r\n                return;\r\n            }\r\n        });\r\n        if (response.data && response.data.success) {\r\n            if (auth.user.likes) {//delete any existing like from the user's like list\r\n                auth.user.likes.forEach((like, index) => {\r\n                    if (like.listId === list._id) {\r\n                        auth.user.likes.splice(index, 1);\r\n                    }\r\n                })\r\n            }\r\n            if (!auth.user.likes) {\r\n                auth.user.likes = [];\r\n            }\r\n            auth.user.likes.push(response.data.like);\r\n            return response.data.top5List;\r\n        }\r\n    }\r\n\r\n    store.unlikeList = async function (list, like) {\r\n        let lType = (store.listViewMode === ListViewMode.COMMUNITY_LISTS) ? \"community\" : \"normal\";\r\n        let response = await api.unlikeList(list._id, {like: like, listType: lType}).catch((err) => {\r\n            console.log(err);\r\n            if (err.response) {\r\n                auth.setError(\"Unlike failed!\");\r\n                return;\r\n            }\r\n        });\r\n        if (response.data && response.data.success) {\r\n            if (auth.user.likes) {//delete any existing like from the user's like list\r\n                auth.user.likes.forEach((like, index) => {\r\n                    if (like.listId === list._id) {\r\n                        auth.user.likes.splice(index, 1);\r\n                    }\r\n                })\r\n            }\r\n            return response.data.top5List;\r\n        }\r\n    }\r\n\r\n    // THIS FUNCTION PROCESSES CHANGING A LIST NAME\r\n    store.changeListName = async function (id, newName) {\r\n        let response = await api.getTop5ListById(id);\r\n        if (response.data.success) {\r\n            let top5List = response.data.top5List;\r\n            top5List.name = newName;\r\n            async function updateList(top5List) {\r\n                response = await api.updateTop5ListById(top5List._id, top5List);\r\n                if (response.data.success) {\r\n                    async function getListPairs(top5List) {\r\n                        response = await api.getTop5ListPairs();\r\n                        if (response.data.success) {\r\n                            let pairsArray = response.data.idNamePairs;\r\n                            storeReducer({\r\n                                type: GlobalStoreActionType.CHANGE_LIST_NAME,\r\n                                payload: {\r\n                                    idNamePairs: pairsArray,\r\n                                    top5List: null//changed this to null so current list wasn't updated here, from top5List\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    getListPairs(top5List);\r\n                }\r\n            }\r\n            updateList(top5List);\r\n        }\r\n    }\r\n    \r\n\r\n    // THIS FUNCTION PROCESSES CLOSING THE CURRENTLY LOADED LIST\r\n    store.closeCurrentList = function () {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.CLOSE_CURRENT_LIST,\r\n            payload: {}\r\n        });\r\n        \r\n        // tps.clearAllTransactions();\r\n        // history.push(\"/\");//TODO bug when clicking logo from home screen\r\n    }\r\n\r\n    // THIS FUNCTION CREATES A NEW LIST\r\n    store.createNewList = async function () {\r\n        let payload = {\r\n            username: auth.user.username,\r\n            name: \"Untitled\",\r\n            items: [\"?\", \"?\", \"?\", \"?\", \"?\"],\r\n            likes: 0,\r\n            dislikes: 0,\r\n            published: null,\r\n            views:  0\r\n        };\r\n        const response = await api.createTop5List(payload);\r\n        if (response.data.success) {\r\n            // tps.clearAllTransactions();\r\n            let newList = response.data.top5List;\r\n            storeReducer({\r\n                type: GlobalStoreActionType.CREATE_NEW_LIST,\r\n                payload: newList\r\n            }\r\n            );\r\n\r\n            // IF IT'S A VALID LIST THEN LET'S START EDITING IT\r\n            history.push(\"/top5list/\" + newList._id);\r\n        }\r\n        else {\r\n            console.log(\"API FAILED TO CREATE A NEW LIST\");\r\n        }\r\n    }\r\n\r\n    // THE FOLLOWING 5 FUNCTIONS ARE FOR COORDINATING THE DELETION\r\n    // OF A LIST, WHICH INCLUDES USING A VERIFICATION MODAL. THE\r\n    // FUNCTIONS ARE markListForDeletion, deleteList, deleteMarkedList,\r\n    // showDeleteListModal, and hideDeleteListModal\r\n    store.markListForDeletion = async function (id) {\r\n        // GET THE LIST\r\n        let response = await api.getTop5ListById(id);\r\n        if (response.data.success) {\r\n            let top5List = response.data.top5List;\r\n            storeReducer({\r\n                type: GlobalStoreActionType.MARK_LIST_FOR_DELETION,\r\n                payload: top5List\r\n            });\r\n        }\r\n    }\r\n\r\n    store.deleteList = async function (listToDelete) {\r\n        let response = await api.deleteTop5ListById(listToDelete._id);\r\n        if (response.data.success) {\r\n            store.reloadLists();\r\n        }\r\n    }\r\n\r\n    store.deleteMarkedList = function () {\r\n        store.deleteList(store.listMarkedForDeletion);\r\n    }\r\n\r\n    store.unmarkListForDeletion = function () {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.UNMARK_LIST_FOR_DELETION,\r\n            payload: null\r\n        });\r\n    }\r\n\r\n    // THE FOLLOWING 8 FUNCTIONS ARE FOR COORDINATING THE UPDATING\r\n    // OF A LIST, WHICH INCLUDES DEALING WITH THE TRANSACTION STACK. THE\r\n    // FUNCTIONS ARE setCurrentList, addMoveItemTransaction, addUpdateItemTransaction,\r\n    // moveItem, updateItem, updateCurrentList, undo, and redo\r\n    store.setCurrentList = async function (id) {\r\n\r\n        let response = await api.getTop5ListById(id).catch((err) => {\r\n            if (err.response) {\r\n                history.push(\"/\");\r\n                auth.setError(err.response.errorMessage);\r\n            }\r\n            else {\r\n                history.push(\"/\");\r\n                auth.setError(\"ACCESS DENIED: You do not own this list!\");\r\n            }\r\n        });\r\n        if (typeof response !== 'undefined' && response.data.success) {\r\n            let top5List = response.data.top5List;\r\n            storeReducer({\r\n                type: GlobalStoreActionType.SET_CURRENT_LIST,\r\n                payload: top5List\r\n            });\r\n            history.push(\"/top5list/\" + id);\r\n        } else {\r\n            // alert(\"IN ELSE\");\r\n            history.push(\"/\");\r\n            auth.setError(\"ACCESS DENIED: You do not own this list!\");\r\n        }\r\n    }\r\n\r\n    store.clearCurrentList = () => {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.SET_CURRENT_LIST,\r\n            payload: null\r\n        });\r\n    }\r\n\r\n    store.initState = () => {\r\n        setStore({\r\n            lists: [],\r\n            allLists: [],\r\n            currentList: null,\r\n            editActive: false,\r\n            listMarkedForDeletion: null,\r\n            listViewMode: null\r\n        });\r\n    }\r\n\r\n    store.addMoveItemTransaction = function (start, end) {\r\n        // let transaction = new MoveItem_Transaction(store, start, end);\r\n        // tps.addTransaction(transaction);\r\n    }\r\n\r\n    store.addUpdateItemTransaction = function (index, newText) {\r\n        let oldText = store.currentList.items[index];\r\n        // let transaction = new UpdateItem_Transaction(store, index, oldText, newText);\r\n        // tps.addTransaction(transaction);\r\n    }\r\n\r\n    store.moveItem = function (start, end) {\r\n        start -= 1;\r\n        end -= 1;\r\n        if (start < end) {\r\n            let temp = store.currentList.items[start];\r\n            for (let i = start; i < end; i++) {\r\n                store.currentList.items[i] = store.currentList.items[i + 1];\r\n            }\r\n            store.currentList.items[end] = temp;\r\n        }\r\n        else if (start > end) {\r\n            let temp = store.currentList.items[start];\r\n            for (let i = start; i > end; i--) {\r\n                store.currentList.items[i] = store.currentList.items[i - 1];\r\n            }\r\n            store.currentList.items[end] = temp;\r\n        }\r\n\r\n        // NOW MAKE IT OFFICIAL\r\n        store.updateCurrentList();\r\n    }\r\n\r\n    store.updateItem = function (index, newItem) {\r\n        store.currentList.items[index] = newItem;\r\n        storeReducer({\r\n            type: GlobalStoreActionType.SET_CURRENT_LIST,\r\n            payload: store.currentList\r\n        });\r\n    }\r\n\r\n    store.updateListName = function (newName) {\r\n        store.currentList.name = newName;\r\n        storeReducer({\r\n            type: GlobalStoreActionType.SET_CURRENT_LIST,\r\n            payload: store.currentList\r\n        });\r\n    }\r\n\r\n    store.updateCurrentList = async function () {\r\n        const response = await api.updateTop5ListById(store.currentList._id, store.currentList);\r\n        if (response.data.success) {\r\n            store.loadMyLists();\r\n        }\r\n    }\r\n\r\n    store.publishList = async function () {\r\n        store.currentList.published = new Date(Date());\r\n        const response = await api.updateTop5ListById(store.currentList._id, store.currentList);\r\n        if (response.data.success) {\r\n            store.loadMyLists();\r\n        }\r\n    }\r\n\r\n    store.postComment = async function (message, listId) {\r\n        let comment = {\r\n            message: message,\r\n            listId: listId,\r\n            creator: auth.user.username,\r\n            created: Date.now()\r\n        }\r\n        const response = await api.postComment(listId, comment);\r\n        if (response.data.success) {\r\n            return comment;\r\n        }\r\n    }\r\n\r\n    store.undo = function () {\r\n        // tps.undoTransaction();\r\n    }\r\n\r\n    store.redo = function () {\r\n        // tps.doTransaction();\r\n    }\r\n\r\n    store.canUndo = function() {\r\n        // return tps.hasTransactionToUndo();\r\n    }\r\n\r\n    store.canRedo = function() {\r\n        // return tps.hasTransactionToRedo();\r\n    }\r\n\r\n    // THIS FUNCTION ENABLES THE PROCESS OF EDITING A LIST NAME\r\n    store.setIsListNameEditActive = function () {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.SET_LIST_NAME_EDIT_ACTIVE,\r\n            payload: null\r\n        });\r\n    }\r\n\r\n    // THIS FUNCTION ENABLES THE PROCESS OF EDITING AN ITEM\r\n    store.setIsItemEditActive = function (status) {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.SET_ITEM_EDIT_ACTIVE,\r\n            payload: status\r\n        });\r\n    }\r\n\r\n    return (\r\n        <GlobalStoreContext.Provider value={{\r\n            store\r\n        }}>\r\n            {props.children}\r\n        </GlobalStoreContext.Provider>\r\n    );\r\n}\r\n\r\nexport default GlobalStoreContext;\r\nexport { GlobalStoreContextProvider };","import * as React from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst options = [\r\n  'Title',\r\n  'Author',\r\n  'Genre',\r\n  'Tag',\r\n];\r\n\r\nexport default function SearchDropdown() {\r\n  const theme = useTheme();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n  const open = Boolean(anchorEl);\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div id=\"search-dropdown\">\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"Device settings\"\r\n        sx={{ bgcolor: theme.palette.primary.dark }}\r\n      >\r\n        <ListItem\r\n          button\r\n          id=\"lock-button\"\r\n          aria-haspopup=\"listbox\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"Search By\"\r\n          aria-expanded={open ? 'true' : undefined}\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText\r\n            primary=\"Search By\"\r\n            secondary={options[selectedIndex]}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'lock-button',\r\n          role: 'listbox',\r\n        }}\r\n      >\r\n        {options.map((option, index) => (\r\n          <MenuItem\r\n            key={option}\r\n            disabled={index === 5}\r\n            selected={index === selectedIndex}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import { useContext, useState } from 'react';\r\nimport AuthContext from '../auth';\r\nimport { GlobalStoreContext } from '../store'\r\nimport * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SumIcon from '@mui/icons-material/Functions';\r\nimport SortIcon from '@mui/icons-material/Sort';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport { ListViewMode, ListSortMode } from '../store/index.js';\r\nimport SearchDropdown from './SearchDropdown';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: theme.palette.primary.dark,\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\nconst menuId = 'sort-menu';\r\n\r\nexport default function SearchToolbar() {\r\n    const theme = useTheme();\r\n    const { auth } = useContext(AuthContext);\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleHomeLists = () => {\r\n      store.loadMyLists();\r\n    };\r\n\r\n    const handleAllLists = () => {\r\n      store.loadPublishedLists();\r\n    };\r\n\r\n    const handleUserLists = () => {\r\n      store.clearListsForUserView();\r\n    };\r\n\r\n    const handleCommunityLists = () => {\r\n        store.loadCommunityLists();\r\n    };\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDateNewest = async () => {\r\n        store.sortLists(ListSortMode.DATE_NEWEST);\r\n        handleMenuClose();\r\n    }\r\n\r\n    const handleDateOldest = async () => {\r\n        store.sortLists(ListSortMode.DATE_OLDEST);\r\n        handleMenuClose();\r\n    }\r\n\r\n    const handleViews = async () => {\r\n        store.sortLists(ListSortMode.VIEWS);\r\n        handleMenuClose();\r\n    }\r\n\r\n    const handleLikes = async () => {\r\n        store.sortLists(ListSortMode.LIKES);\r\n        handleMenuClose();\r\n    }\r\n\r\n    const handleDislikes = async () => {\r\n        store.sortLists(ListSortMode.DISLIKES);\r\n        handleMenuClose();\r\n    }\r\n\r\n    function handleSearchEnter(event) {\r\n        if (event.code === \"Enter\") {\r\n            if (store.listViewMode = ListViewMode.USER_LISTS) {\r\n              store.loadListsByUsername(event.target.value);\r\n            } else if (store.listViewMode !== null) {\r\n              store.searchLists(event.target.value);\r\n            } else {\r\n              alert(\"You must select a list tab before searching!\");\r\n            }\r\n        }\r\n    }\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Toolbar>\r\n          <Search\r\n            disabled={store.currentList !== null}\r\n            className=\"toolbar-black\"\r\n            onKeyPress={handleSearchEnter}>\r\n            <SearchIconWrapper>\r\n              <SearchIcon/>\r\n            </SearchIconWrapper>\r\n            <StyledInputBase color={theme.palette.primary.dark}\r\n              disabled={store.currentList !== null}\r\n              placeholder=\"Search…\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </Search>\r\n          <SearchDropdown/>\r\n        </Toolbar>\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport { loadCSS } from 'fg-loadcss';\r\nimport Box from '@mui/material/Box';\r\nimport { green } from '@mui/material/colors';\r\nimport Icon from '@mui/material/Icon';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nexport default function CreatePostButton() {\r\n  React.useEffect(() => {\r\n    const node = loadCSS(\r\n      'https://use.fontawesome.com/releases/v5.14.0/css/all.css',\r\n      // Inject before JSS\r\n      document.querySelector('#font-awesome-css') || document.head.firstChild,\r\n    );\r\n\r\n    return () => {\r\n      node.parentNode.removeChild(node);\r\n    };\r\n  }, []);\r\n\r\n    const handleCreatePost = () => {\r\n        //TODO\r\n        return\r\n    }\r\n\r\n  return (\r\n    <IconButton\r\n        size=\"large\"\r\n        edge=\"end\"\r\n        aria-label=\"create post\"\r\n    >\r\n        <Icon\r\n            baseClassName=\"fas\"\r\n            className=\"fa-plus-circle\"\r\n            sx={{ color: '#FF6D00', fontSize: 30 }}\r\n            onClick={handleCreatePost}\r\n        />\r\n    </IconButton>\r\n  );\r\n}","import { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AuthContext from '../auth';\r\nimport { GlobalStoreContext } from '../store'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport Stack from '@mui/material/Stack';\r\nimport SearchToolbar from './SearchToolbar'\r\nimport CreatePostButton from './CreatePostButton'\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\nimport Icon from '@mui/material/Icon';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nexport default function AppBanner() {\r\n    const { auth } = useContext(AuthContext);\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const theme = useTheme();\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleProfile = async () => {\r\n        auth.handleProfile(store.mediaType);\r\n    }\r\n\r\n    const handleLogout = async () => {\r\n        handleMenuClose();\r\n        await auth.logout();\r\n        store.initState();\r\n    }\r\n\r\n    const handleGuest = () => {\r\n        auth.guestUser();\r\n        handleMenuClose();\r\n    }\r\n\r\n    const handleUndoGuest = () => {\r\n        auth.undoGuest();\r\n        handleMenuClose();\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const loggedOutMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            {\r\n            //TODO must add google signin link below\r\n            }\r\n            <MenuItem onClick={handleUndoGuest}><Link to='/register/'>Google Login</Link></MenuItem>\r\n            {/* <MenuItem onClick={handleUndoGuest}><Link to='/login/'>Login</Link></MenuItem> */}\r\n            {/* {(!auth.user || !auth.user.username ) ? <MenuItem onClick={handleGuest}><Link to='/'>Continue as Guest</Link></MenuItem> : \"\"} */}\r\n            \r\n        </Menu>\r\n    );\r\n    const loggedInMenu = \r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleProfile}>Profile</MenuItem>\r\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n        </Menu>        \r\n\r\n    let editToolbar = \"\";\r\n    let menu = loggedOutMenu;\r\n    if (true) {\r\n        menu = loggedInMenu;\r\n    }\r\n\r\n    const styles = {\r\n        paperContainer: {\r\n            backgroundImage: `url(${Image})`\r\n        }\r\n    };\r\n    \r\n    function getAccountMenu(loggedIn) {\r\n        if (true) {\r\n            //need to show user initials\r\n            return <img\r\n            style={{borderRadius: '50%', height: '50px', width: '50px'}}\r\n            src={`https://i.picsum.photos/id/1064/300/300.jpg?hmac=x2Qoo-SsJIdhmNkLPrIFXDRsuEAd0ITP-T5pwIt_4yY`}\r\n            srcSet={`https://i.picsum.photos/id/1064/300/300.jpg?hmac=x2Qoo-SsJIdhmNkLPrIFXDRsuEAd0ITP-T5pwIt_4yY`}\r\n            />;\r\n        }\r\n        return <AccountCircle sx={{ color: '#FF6D00', fontSize: 48 }} />;\r\n    }\r\n\r\n    function handleLogoClick() {\r\n        store.goHome();\r\n    }\r\n\r\n    let newPostButton = (auth.loggedIn) ? \r\n        <CreatePostButton/> :\r\n        \"\";        \r\n\r\n    return (\r\n        <Stack spacing={0}>\r\n            <Box sx={{ flexGrow: 1}}>\r\n                <AppBar position=\"static\" >\r\n                    <Toolbar id=\"app-banner\" style={{backgroundColor: theme.palette.primary.dark}}>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            edge=\"end\"\r\n                            aria-label=\"logo\"\r\n                            onClick={handleLogoClick}>\r\n                            <SvgIcon >\r\n                                <path d=\"M 10 10 H 90 V 90 H 10 L 10 10\"/>\r\n                            </SvgIcon>\r\n                        </IconButton>\r\n                        <SearchToolbar />\r\n                        <Box sx={{ flexGrow: 1 }}>{editToolbar}</Box>\r\n                        <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n                            {newPostButton}\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleProfileMenuOpen}\r\n                            >\r\n                                { getAccountMenu(auth.loggedIn) }\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {\r\n                    menu\r\n                }\r\n            </Box>\r\n        </Stack>\r\n    );\r\n\r\n    // <Button sx={{ bgcolor: '#331BD8' }} variant=\"contained\">Contained</Button>\r\n}","import { useContext, useState, useEffect } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemsSummary from './ListItemsSummary.js';\r\nimport ListCommentArea from './ListCommentArea.js';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@mui/material/Button';\r\nimport { ListViewMode } from '../store/index.js';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\r\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\r\nimport AuthContext from '../auth'\r\n\r\n\r\n/*\r\n    This is a card in our list of top 5 lists. It lets select\r\n    a list for editing and it has controls for changing its \r\n    name or deleting it.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction StoryCard(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [forceUpdate, setForceUpdate] = useState(1);\r\n    let { startList } = props;\r\n    const [list, setList] = useState({});\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (startList) {\r\n            setList(startList);\r\n        }\r\n      }, [startList])\r\n    \r\n    \r\n    // function handleLoadList(event, id) {\r\n    //     if (!event.target.disabled) {\r\n    //         // CHANGE THE CURRENT LIST\r\n    //         store.setCurrentList(id);\r\n    //     }\r\n    // }\r\n\r\n    // async function handleThumbUp() {\r\n    //     if (!auth.userHasLike(list._id)) {\r\n    //         let updatedList = await store.likeList(list, true);\r\n    //         // list = updatedList;\r\n    //         setList(updatedList);\r\n    //     } else {\r\n    //         let updatedList = await store.unlikeList(list, true);\r\n    //         // list = updatedList;\r\n    //         // alert(updatedList.name);\r\n    //         setList(updatedList);\r\n    //     }\r\n    // }\r\n\r\n    // async function handleThumbDown() {\r\n    //     if (!auth.userHasDislike(list._id)) {\r\n    //         let updatedList = await store.likeList(list, false);\r\n    //         // list = updatedList;\r\n    //         setList(updatedList);\r\n    //     } else {\r\n    //         let updatedList = await store.unlikeList(list, false);\r\n    //         // list = updatedList;\r\n    //         setList(updatedList);\r\n    //     }\r\n    // }\r\n\r\n    // function handleDeleteList(event, id) {\r\n    //     event.stopPropagation();\r\n    //     store.markListForDeletion(id);\r\n    // }\r\n\r\n    // async function handleExpand() {\r\n    //     if (store.listViewMode === ListViewMode.COMMUNITY_LISTS) {\r\n    //         let updatedList = await store.viewCommunityList(list);\r\n    //         if (!updatedList)\r\n    //             return;\r\n    //         setList(updatedList);\r\n    //     } else if (store.listViewMode !== ListViewMode.MY_LISTS) {\r\n    //         let updatedList = await store.viewList(list);\r\n    //         if (!updatedList)\r\n    //             return;\r\n    //         setList(updatedList);\r\n    //     }\r\n        \r\n    //     // setForceUpdate(!forceUpdate);\r\n    //     setExpanded(true);\r\n    // }\r\n\r\n    // function handleLess() {\r\n    //     setExpanded(false);\r\n    // }\r\n\r\n    // let pclass = \"list-card \" + ((list.published || list.updated) ? \"published-list-card\" : \"unpublished-list-card\");\r\n\r\n    // let published = \"\";\r\n\r\n    // if (list.published) {\r\n    //     published = \"Published \" + (new Date(list.published)).toDateString().substring(4);\r\n    // } else if (store.listViewMode === ListViewMode.MY_LISTS) {\r\n    //     published = <Button id=\"list-card-edit-button\" size=\"small\" onClick={(event) => {\r\n    //         handleLoadList(event, list._id)\r\n    //     }}>Edit</Button>;\r\n    // } else if (store.listViewMode === ListViewMode.COMMUNITY_LISTS) {\r\n    //     published = \"Updated \" + (new Date(list.updatedAt)).toDateString().substring(4);\r\n    // }\r\n\r\n    // let trash = (store.listViewMode === ListViewMode.MY_LISTS) ? \r\n    //     <IconButton onClick={(event) => {\r\n    //         handleDeleteList(event, list._id)\r\n    //     }} aria-label='delete'>\r\n    //         <DeleteIcon style={{fontSize:'24pt'}} />\r\n    //     </IconButton> :\r\n    //     <Box sx={{ p: 1 }}>\r\n    //     </Box>;\r\n\r\n    // let expand = (!expanded) ? \r\n    //     <IconButton onClick={handleExpand} aria-label='expand'>\r\n    //         <ExpandMoreIcon style={{fontSize:'24pt'}} />\r\n    //     </IconButton> :\r\n    //     <IconButton onClick={handleLess} aria-label='less'>\r\n    //         <ExpandLessIcon style={{fontSize:'24pt'}} />\r\n    //     </IconButton>;\r\n\r\n    // let listSummary = (expanded) ? \r\n    //     <ListItemsSummary list={list}/> :\r\n    //     \"\";\r\n\r\n    // let commentArea = (expanded) ?\r\n    //     <ListCommentArea list={list} /> :\r\n    //     \"\";\r\n\r\n    // let creator = (store.listViewMode === ListViewMode.COMMUNITY_LISTS) ?\r\n    //     \"\" :\r\n    //     \"By: \" + list.username;\r\n\r\n    // let likeButtonColor = (auth.user && auth.userHasLike(list._id)) ? \"secondary\" : \"default\";\r\n\r\n    let cardElement =\r\n        <ListItem\r\n            id={list._id}\r\n            key={list._id}\r\n            sx={{ marginTop: '15px', display: 'flex', p: 1 }}\r\n            style={{\r\n                fontSize: '48pt',\r\n                width: '100%'\r\n            }}\r\n            // className={pclass}\r\n        >\r\n                {/* <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1 }}>\r\n                    <Box sx={{ p: 1, flexGrow: 1 }} style={{fontSize:'24pt'}}>{list.name}</Box>\r\n                    <Box sx={{ p: 1, flexGrow: 1 }} style={{fontSize:'12pt'}}>{creator}</Box>\r\n                    <Box>{listSummary}</Box>\r\n                    <Box sx={{ p: 1, flexGrow: 1 }} style={{fontSize:'12pt'}}>{published}</Box>\r\n                </Box>\r\n                <Box sx={{ height: '100%' }}>\r\n                    <div id=\"like-area\">\r\n                        <span className=\"view-display\" style={{marginRight: 20}}>\r\n                                { (!(list.published || list.updated)) ? \"\" : \"Views \" + list.views}\r\n                        </span>\r\n                        <span>\r\n                            <IconButton disabled={!auth.user || !auth.loggedIn || !(list.published || list.updated)} color={(auth.user && auth.userHasLike(list._id)) ? \"secondary\" : \"default\"} onClick={handleThumbUp} aria-label='expand'>\r\n                                <ThumbUpOffAltIcon style={{fontSize:'36pt'}} />\r\n                            </IconButton>\r\n                        </span>\r\n                        <span className=\"like-display\">\r\n                            {list.likes}\r\n                        </span>\r\n                        <span>\r\n                            <IconButton disabled={!auth.user || !auth.loggedIn || !(list.published || list.updated)} color={(auth.user && auth.userHasDislike(list._id)) ? \"error\" : \"default\"} onClick={handleThumbDown} aria-label='expand'>\r\n                                <ThumbDownOffAltIcon style={{fontSize:'36pt'}} />\r\n                            </IconButton>\r\n                        </span>\r\n                        <span className=\"like-display\">\r\n                            {list.dislikes}\r\n                        </span>\r\n                    </div>\r\n                    <Box>\r\n                        {commentArea}\r\n                    </Box>\r\n                </Box>\r\n                <Box sx={{ p: 1 }}>\r\n                    <Box>\r\n                        {trash}\r\n                    </Box>\r\n                    <Box>\r\n                        {expand}\r\n                    </Box>\r\n                </Box> */}\r\n        </ListItem>\r\n    return (\r\n        cardElement\r\n    );\r\n}\r\n\r\nexport default StoryCard;","import Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                The Top 5 Lister\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    //exploreList: {\r\n\r\n    //},\r\n    exploreListHeader: {\r\n        \r\n    },\r\n\r\n    exploreCard: {\r\n        marginLeft: '1%',\r\n        marginRight: '1%', \r\n        marginBottom: '3%',\r\n        marginTop: '3%',\r\n        backgroundColor: 'primary', \r\n        borderRadius: 10, \r\n        display: 'flex', \r\n        p: 1,\r\n        fontSize: '48pt',\r\n        width: '100%'\r\n\r\n    }\r\n}));\r\n\r\nexport default useStyles;","import { useTheme } from '@mui/material/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\r\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\r\nimport { ListItem } from '@mui/material';\r\n\r\nexport const ExploreCard = ({ post }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <>\r\n        <ListItem sx={{ bgcolor: theme.palette.primary, borderRadius: 0, display: 'flex', width: '100%', position: 'relative'}}>\r\n            <Box sx={{fontFamily: 'Arial, sans-serif', backgroundColor: theme.palette.primary.light, borderRadius: 5, width: '100%', display: 'inline', p: 1}} style={{cursor: 'pointer'}}>\r\n                <Box sx={{ p: 1, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{post.title}</Box>\r\n                <Box sx={{ p: 1, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{post.author}</Box>\r\n                <Box sx={{ p: 1, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{post.published}</Box>\r\n                <Box sx={{ p: 1, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{post.description}</Box>\r\n                <Box sx={{ height: '95%' }}>\r\n                    <div id=\"like-area\">\r\n                        <span>\r\n                            <IconButton>\r\n                                <ThumbUpOffAltIcon sx={{ pt: 2 }}/>\r\n                            </IconButton>\r\n                        </span>\r\n                        <span className=\"like-display\">\r\n                            {post.likes}\r\n                        </span>\r\n                        <span>\r\n                            <IconButton>\r\n                                <ThumbDownOffAltIcon sx={{ pt: 2 }} />\r\n                            </IconButton>\r\n                        </span>\r\n                        <span className=\"like-display\">\r\n                            {post.dislikes}\r\n                        </span>\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n        </ListItem>\r\n        </>\r\n    );\r\n};","import { ExploreCard } from './ExploreCard';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ListSubheader } from '@mui/material';\r\nimport { bgcolor } from '@mui/system';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst ExploreTag = ({ tag, posts }) => {\r\n  const theme = useTheme();\r\n \r\n    return (\r\n      <>\r\n        <Box sx={{fontFamily: 'Arial, sans-serif', bgcolor: theme.palette.primary.main, borderRadius: 5}}>\r\n          <Box sx={{ p: 1, flexGrow: 1 }} style={{ fontSize: '20pt', fontWeight: 'bold' }}>{tag}</Box>\r\n        </Box>\r\n          {posts.map((post, index) => (\r\n            <ExploreCard key={index} post={post}/>\r\n          ))}\r\n      </>\r\n    )\r\n};\r\n\r\nexport default ExploreTag;","import ExploreTag from './ExploreTag';\r\nimport List from '@mui/material/List';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst Explore = ({ exploreTags }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n        <div id=\"exploreSection\">\r\n        <Box sx={{fontFamily: 'Arial, sans-serif', bgcolor: theme.palette.primary.main, borderRadius: 5, margin: 5, display: 'flex'}}>\r\n          <Typography sx={{ p: 1, flexGrow: 1}} style={{ fontSize: '20pt', fontWeight: 'bold', justifyContent: 'center' }} align=\"center\">Explore</Typography></Box>\r\n        <List sx={{marginTop: 5, marginRight: 5, marginLeft: 5}} style={{flexDirection: 'row'}}>\r\n            {exploreTags.map((tag, index) => (\r\n                <ExploreTag key={ index } tag={ tag.name } posts={ tag.posts }/>\r\n            ))}\r\n        </List>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Explore;","import { ExploreCard } from './ExploreCard';\r\nimport List from '@mui/material/List';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst Following = ({ posts }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n        <div id=\"followingSection\">\r\n        <Box sx={{fontFamily: 'Arial, sans-serif', bgcolor: theme.palette.primary.main, borderRadius: 5, margin: 5, display: 'flex'}}>\r\n          <Typography sx={{ p: 1, flexGrow: 1}} style={{ fontSize: '20pt', fontWeight: 'bold', justifyContent: 'center' }} align=\"center\">Following</Typography></Box>\r\n        <List sx={{marginTop: 5, marginRight: 5, marginLeft: 5}} style={{flexDirection: 'row'}}>\r\n            {posts.map((post, index) => (\r\n                <ExploreCard key={ index } post={ post }/>\r\n            ))}\r\n        </List>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Following;","import React, { useContext, useEffect } from 'react'\r\nimport { GlobalStoreContext, ListViewMode } from '../store'\r\nimport ListCard from './ListCard.js'\r\nimport { Fab, ListItem, Typography } from '@mui/material'\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport List from '@mui/material/List';\r\nimport { CenterFocusStrong } from '@mui/icons-material';\r\nimport Box from '@mui/material/Box';\r\nimport StoryCard from './StoryCard.js'\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { IconButton } from '@mui/material';\r\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\r\nimport ThumbDownOffAltIcon from '@mui/icons-material/ThumbDownOffAlt';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport ThumbUpOffAltIcon from '@mui/icons-material/ThumbUpOffAlt';\r\nimport Copyright from './Copyright.js'\r\nimport useStyles from '../styling/styles'\r\nimport Explore from './Explore';\r\nimport Following from './Following';\r\n\r\n/*\r\n    This React component lists all the top5 lists in the UI.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nconst HomeScreen = () => {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        // store.loadIdNamePairs();\r\n    }, []);\r\n\r\n    // function handleCreateNewList() {\r\n    //     store.createNewList();\r\n    // }\r\n\r\n    // if (store.listViewMode === ListViewMode.USER_LISTS && store.lists.length === 0) {\r\n    //     return <Box justifySelf=\"center\" style={{ justifyContent: 'center', height: '100%', width: '100%' }}><div>THERE ARE NO PUBLISHED LISTS FOR THE CURRENT USER SEARCHED</div></Box>\r\n    // }\r\n\r\n    let storyExploreCardList1 = \"\";\r\n    // if (store) {\r\n    storyExploreCardList1 =\r\n        <List sx={{ width: '100%' }} style={{ display: 'flex', flexDirection: 'row', padding: 0 }}>\r\n            {/* {\r\n                store.lists.map((list) => (\r\n                    <StoryCard\r\n                        key={list._id}\r\n                        startList={list}\r\n                        selected={false}\r\n                    />\r\n                ))\r\n            } */}\r\n\r\n            <ListItem className = { classes.exploreListCard }>\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"The Nightmare on Circle Road\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"KreddyFrueger\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{\"10/2/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"There's an uber in the bus loop... And that's not the worst of it...\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"1000\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"5000\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem className = { classes.exploreListCard }>\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"The Dulling\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"StephanieQueen\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{\"2/2/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"A young man will soon find out that the soap in his hotel room is more alive than he thinks...\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"7000\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"50\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem className = { classes.exploreListCard }>\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"Library Starbucks\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"SBUCoffeeColonel\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{\"3/23/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"If Taylor doesn't get their coffee soon, the line isn't the only thing getting out...\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"120\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"0\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n        </List>;\r\n    // }\r\n    let storyExploreCardList2 = \"\";\r\n    // if (store) {\r\n    storyExploreCardList2 =\r\n        <List sx={{ width: '100%' }} style={{ display: 'flex', flexDirection: 'row', padding: 0 }}>\r\n            {/* {\r\n                store.lists.map((list) => (\r\n                    <StoryCard\r\n                        key={list._id}\r\n                        startList={list}\r\n                        selected={false}\r\n                    />\r\n                ))\r\n            } */}\r\n\r\n            <ListItem className = { classes.exploreListCard }>\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"The Last Cookie\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"FerlockSholmes\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{\"2/16/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"Somebody will have to pay the price for the empty jar, but who?\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"21\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"967\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem className = { classes.exploreListCard }>\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"Sesame Sleuth\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"OscarThaGrouch\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{\"2/16/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"Rocko was found dead in his Calabasas apartment and Big Bird is going to get to the bottom of it.\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"700\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"500\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem className = { classes.exploreListCard }>\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"Where's Wendy?\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"DonaldMcRonald\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{\"3/23/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"Ever since the fries were sea salted, nobody's seen Wendy. Everyone's a suspect, even Dave himself...\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"120\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"10\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n        </List>;\r\n\r\n    let storyExploreCardList3 = \"\";\r\n    // if (store) {\r\n    storyExploreCardList3 =\r\n        <List sx={{ width: '100%' }} style={{ display: 'flex', flexDirection: 'row', padding: 0 }}>\r\n            {/* {\r\n            store.lists.map((list) => (\r\n                <StoryCard\r\n                    key={list._id}\r\n                    startList={list}\r\n                    selected={false}\r\n                />\r\n            ))\r\n        } */}\r\n\r\n            <ListItem\r\n                sx={{ marginRight: '10px', bgcolor: '#A5A6F6', borderRadius: 2.5, display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '48pt',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"The Last Cookie\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"FerlockSholmes\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{\"2/16/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"Somebody will have to pay the price for the empty jar, but who?\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"21\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"967\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                sx={{ marginRight: '10px', bgcolor: '#A5A6F6', borderRadius: 2.5, display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '48pt',\r\n                    width: '100%'\r\n                }}>\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"Sesame Sleuth\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"OscarThaGrouch\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{\"2/16/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"Rocko was found dead in his Calabasas apartment and Big Bird is going to get to the bottom of it.\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"700\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"500\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                sx={{ marginRight: '10px', bgcolor: '#A5A6F6', borderRadius: 2.5, display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '48pt',\r\n                    width: '100%'\r\n                }}>\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"Where's Wendy?\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"DonaldMcRonald\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '8pt' }}>{\"3/23/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"Ever since the fries were sea salted, nobody's seen Wendy. Everyone's a suspect, even Dave himself...\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"120\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 2 }} style={{ fontSize: '18pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"10\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n        </List>;\r\n\r\n    let storyFollowingCardList = \"\";\r\n    // if (store) {\r\n    storyFollowingCardList =\r\n        <List sx={{ width: '100%' }} style={{ display: 'flex', flexDirection: 'column', padding: 0 }}>\r\n            {/* {\r\n                store.lists.map((list) => (\r\n                    <StoryCard\r\n                        key={list._id}\r\n                        startList={list}\r\n                        selected={false}\r\n                    />\r\n                ))\r\n            } */}\r\n            <ListItem\r\n                sx={{ marginBottom: '10px', bgcolor: '#A5A6F6', borderRadius: 2.5, display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '10pt',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"The Winds of Winter\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"GeorgeRRMartin\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '10pt' }}>{\"10/2/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"The sixth installment in my A Song of Ice and Fire Series. I was waiting to upload this until StorySoft was up and running.\"}</Box>\r\n                    <Box sx={{ height: '10%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"1000\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"5000\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                sx={{ marginBottom: '10px', bgcolor: '#A5A6F6', borderRadius: 2.5, display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '10pt',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"The Perfect Toast in Ten Minutes\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"GordonRamsay\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '10pt' }}>{\"10/2/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"A short, delicious recipe, perfect for any occasion.\"}</Box>\r\n                    <Box sx={{ height: '10%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"1000\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"5000\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                sx={{ marginBottom: '10px', bgcolor: '#A5A6F6', borderRadius: 2.5, display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '10pt',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"The Nightmare on Circle Road\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"KreddyFrueger\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '10pt' }}>{\"10/2/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"There's an uber in the bus loop... And that's not the worst of it...There's an uber in the bus loop... And that's not the worst of it...There's an uber in the bus loop... And that's not the worst of it...There's an uber in the bus loop... And that's not the worst of it...There's an uber in the bus loop... And that's not the worst of it...There's an uber in the bus loop... And that's not the worst of it...There's an uber in the bus loop... And that's not the worst of it...\"}</Box>\r\n                    <Box sx={{ height: '10%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"1000\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"5000\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                sx={{ marginBottom: '10px', bgcolor: '#A5A6F6', borderRadius: 2.5, display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '10pt',\r\n                    width: '100%'\r\n                }}>\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"Sesame Sleuth\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"OscarThaGrouch\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '10pt' }}>{\"2/16/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"Rocko was found dead in his Calabasas apartment and Big Bird is going to get to the bottom of it.\"}</Box>\r\n                    <Box sx={{ height: '100%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"700\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"500\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                sx={{ marginBottom: '10px', bgcolor: '#A5A6F6', borderRadius: 2.5, display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '10pt',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n                <Box sx={{ paddingLeft: 1, paddingRight: 1, flexGrow: 1, fontFamily: 'Arial, sans-serif' }} style={{cursor: 'pointer'}}>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '16pt', fontWeight: 'bold' }}>{\"The Winds of Winter\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '12pt' }}>{\"GeorgeRRMartin\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '10pt' }}>{\"10/2/22 10:13 AM\"}</Box>\r\n                    <Box sx={{ p: .5, flexGrow: 1 }} style={{ fontSize: '11pt' }}>{\"The sixth installment in my A Song of Ice and Fire Series. I was waiting to upload this until StorySoft was up and running.\"}</Box>\r\n                    <Box sx={{ height: '10%' }}>\r\n                        <div id=\"like-area\">\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbUpOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"1000\"}\r\n                            </span>\r\n                            <span>\r\n                                <IconButton>\r\n                                    <ThumbDownOffAltIcon sx={{ pt: 0 }} style={{ fontSize: '24pt' }} />\r\n                                </IconButton>\r\n                            </span>\r\n                            <span className=\"like-display\">\r\n                                {\"5000\"}\r\n                            </span>\r\n                        </div>\r\n                    </Box>\r\n                </Box>\r\n            </ListItem>\r\n\r\n            \r\n        </List>\r\n\r\n    const examplePost = {\r\n        title: 'Example Title',\r\n        author: 'Example Author',\r\n        published: 'Example Published',\r\n        description: 'Example Description',\r\n        likes: '100',\r\n        dislikes: '23',\r\n        imageUrl: 'https://st2.depositphotos.com/3765753/5349/v/600/depositphotos_53491489-stock-illustration-example-rubber-stamp-vector-over.jpg'\r\n    }\r\n    \r\n    const sampleExploreListTags1 = { name: 'Example Tag 1', posts: [examplePost, examplePost, examplePost]};\r\n    const sampleExploreListTags2 = { name: 'Example Tag 2', posts: [examplePost, examplePost, examplePost]};\r\n    const sampleExploreListTags3 = { name: 'Example Tag 3', posts: [examplePost, examplePost, examplePost]};\r\n    const sampleFollowingList = [examplePost, examplePost, examplePost, examplePost, examplePost, examplePost, examplePost];\r\n\r\n    return (\r\n        <div id=\"post-selector\">\r\n            {/* <div id=\"homescreen-divider\"></div> */}\r\n            <Explore exploreTags={[sampleExploreListTags1, sampleExploreListTags2, sampleExploreListTags3]}/>\r\n\r\n            <Following posts={sampleFollowingList}/>\r\n\r\n\r\n\r\n            {/* <div id=\"list-selector-list\">\r\n                {\r\n                    listCard\r\n                }\r\n            </div> */}\r\n\r\n        </div>)\r\n\r\n\r\n}\r\n\r\nexport default HomeScreen;","import { useContext } from 'react';\r\nimport AuthContext from '../auth'\r\nimport Copyright from './Copyright'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nexport default function RegisterScreen() {\r\n    const { auth } = useContext(AuthContext);\r\n    const { store } = useContext(GlobalStoreContext)\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.currentTarget);\r\n        auth.registerUser({\r\n            username: formData.get('username'),\r\n            firstName: formData.get('firstName'),\r\n            lastName: formData.get('lastName'),\r\n            email: formData.get('email'),\r\n            password: formData.get('password'),\r\n            passwordVerify: formData.get('passwordVerify')\r\n        }, store);\r\n    };\r\n\r\n    return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    autoComplete=\"username\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"passwordVerify\"\r\n                                    label=\"Password Verify\"\r\n                                    type=\"password\"\r\n                                    id=\"passwordVerify\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2 }}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"/login/\" variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{ mt: 5 }} />\r\n            </Container>\r\n    );\r\n}","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport AuthContext from '../auth'\r\nimport { useContext, useState, useEffect } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignIn() {\r\n\r\n  const { auth } = useContext(AuthContext);\r\n  const { store } = useContext(GlobalStoreContext)\r\n\r\n  const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      const formData = new FormData(event.currentTarget);\r\n      auth.login({\r\n          email: formData.get('email'),\r\n          password: formData.get('password')\r\n      }, store);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link href=\"/register/\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import { React, useContext, useState } from \"react\";\r\nimport { GlobalStoreContext } from '../store'\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { Typography } from '@mui/material'\r\n\r\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nexport default function Top5ItemEdit(props) {\r\n    const { key, text, index } = props;\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [currentText, setText] = useState(text);\r\n\r\n    function handleUpdateText(event) {\r\n        setText(event.target.value);\r\n        store.updateItem(index, event.target.value);\r\n    }\r\n\r\n    return (\r\n            <ListItem\r\n                id={'item-' + (index+1)}\r\n                key={props.key}\r\n                sx={{ display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '48pt',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n            <div className=\"item-number\"><Typography variant=\"h4\">{index + 1}:</Typography></div>\r\n            <TextField\r\n                    required\r\n                    fullWidth\r\n                    id={key}\r\n                    name=\"name\"\r\n                    className=\"edit-card\"\r\n                    onChange={handleUpdateText}\r\n                    defaultValue={currentText}\r\n                    inputProps={{style: {fontSize: 24}}}\r\n                    InputLabelProps={{style: {fontSize: 24, padding: 0}}}\r\n                />\r\n            </ListItem>\r\n    )\r\n}","import { useContext, useState } from 'react'\r\nimport Top5ItemEdit from './Top5ItemEdit.js'\r\nimport List from '@mui/material/List';\r\nimport { Typography } from '@mui/material'\r\nimport { GlobalStoreContext } from '../store/index.js'\r\nimport AuthContext from '../auth'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n/*\r\n    This React component lets us edit a loaded list, which only\r\n    happens when we are on the proper route.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction WorkspaceScreen() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const [currentListNameText, setListNameText] = useState((store.currentList) ? store.currentList.name : \"\");\r\n    const history = useHistory();\r\n\r\n    let editItems = \"\";\r\n    if (store.currentList) {\r\n        editItems = \r\n            <List id=\"edit-items\" sx={{ width: '100%', bgcolor: \"blue\" }}>\r\n                {\r\n                    store.currentList.items.map((item, index) => (\r\n                        <Top5ItemEdit\r\n                            key={'top5-item-' + (index+1)}\r\n                            text={item}\r\n                            index={index} \r\n                        />\r\n                    ))\r\n                }\r\n            </List>;\r\n    } else if (!auth.error) {\r\n        //case where the current list was never fetched\r\n        // let lastPath = history.location.pathname;\r\n        // store.setCurrentList(lastPath.substring(lastPath.indexOf(\"/top5list/\") + 10));\r\n        store.loadMyLists();\r\n    }\r\n\r\n    function handleUpdateText(event) {\r\n        // alert(event.target.value);\r\n        setListNameText(event.target.value);\r\n        store.updateListName(event.target.value);\r\n    }\r\n\r\n    function handleSave(event) {\r\n        if (!currentListNameText) {\r\n            auth.setError(\"A list name is required\");\r\n        } else {\r\n            store.updateCurrentList();\r\n        }\r\n    }\r\n\r\n    function handlePublish(event) {\r\n        store.publishList();\r\n    }\r\n\r\n    function isIllegalItemName() {\r\n\r\n        for (let i = 0; i < store.currentList.items.length; i++) {\r\n            if (store.currentList.items[i] === \"\" || store.currentList.items[i] === \"?\")\r\n                return true;\r\n\r\n            for (let j = i + 1; j < store.currentList.items.length; j++) {\r\n                if (store.currentList.items[i] === store.currentList.items[j])\r\n                    return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div id=\"top5-workspace\">\r\n            \r\n            <div id=\"workspace-edit\">\r\n            <TextField\r\n                required\r\n                id=\"list-name-edittext\"\r\n                name=\"list-name\"\r\n                className='edit-card-title'\r\n                value={currentListNameText}\r\n                onChange={handleUpdateText}\r\n                inputProps={{style: {fontSize: 18}}}\r\n                InputLabelProps={{style: {fontSize: 18}}}\r\n            />\r\n                {/* <div id=\"edit-numbering\">\r\n                    <div className=\"item-number\"><Typography variant=\"h4\">1.</Typography></div>\r\n                    <div className=\"item-number\"><Typography variant=\"h4\">2.</Typography></div>\r\n                    <div className=\"item-number\"><Typography variant=\"h4\">3.</Typography></div>\r\n                    <div className=\"item-number\"><Typography variant=\"h4\">4.</Typography></div>\r\n                    <div className=\"item-number\"><Typography variant=\"h4\">5.</Typography></div>\r\n                </div> */}\r\n                {editItems}\r\n            </div>\r\n            <div id=\"workspace-buttons\">\r\n                <Button color={(!currentListNameText) ? \"error\" : \"success\"} variant=\"contained\" className=\"workspace-button\" onClick={handleSave} disabled={!currentListNameText}>Save</Button>\r\n                <Button color={(!currentListNameText) ? \"error\" : \"success\"} variant=\"contained\" className=\"workspace-button\" onClick={handlePublish} disabled={ (store.currentList) ?\r\n                    !currentListNameText\r\n                    || store.hasPublishedListName(currentListNameText)\r\n                    || isIllegalItemName()\r\n                    : true\r\n                }>Publish</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkspaceScreen;","import * as React from 'react';\r\nimport { styled, Box } from '@mui/system';\r\nimport ModalUnstyled from '@mui/core/ModalUnstyled';\r\nimport AuthContext from '../auth'\r\nimport { useContext } from 'react';\r\n\r\nconst StyledModal = styled(ModalUnstyled)`\r\n  position: fixed;\r\n  z-index: 1300;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Backdrop = styled('div')`\r\n  z-index: -1;\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  -webkit-tap-highlight-color: transparent;\r\n`;\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 700,\r\n    bgcolor: 'white',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nexport default function ModalAlert() {\r\n    const { auth } = useContext(AuthContext);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    // if (auth.error)\r\n    //     setOpen(true);\r\n\r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      auth.clearError();\r\n    };\r\n  \r\n    return (\r\n        <StyledModal\r\n        aria-labelledby=\"unstyled-modal-title\"\r\n        aria-describedby=\"unstyled-modal-description\"\r\n        open={auth.error ? true : false}\r\n        onClose={handleClose}\r\n        BackdropComponent={Backdrop}\r\n      >\r\n        <Box sx={style}>\r\n          <h2 id=\"unstyled-modal-title\">{auth.error}</h2>\r\n          {/* <p id=\"unstyled-modal-description\">Username or password was incorrect.</p> */}\r\n          <button type=\"button\" onClick={handleClose}>CLOSE</button>\r\n        </Box>\r\n      </StyledModal>\r\n    );\r\n}","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { GlobalStoreContext } from '../store'\r\nimport { useContext } from 'react';\r\n\r\nexport default function ModalDelete() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { store } = useContext(GlobalStoreContext)\r\n\r\n  const handleClose = () => {\r\n    store.unmarkListForDeletion();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n      store.deleteMarkedList();\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={store.listMarkedForDeletion !== null}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {(store.listMarkedForDeletion) ? \"Delete List: \" + store.listMarkedForDeletion.name : \"\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this list?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleDelete} autoFocus>Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { ExploreCard } from './ExploreCard';\r\nimport List from '@mui/material/List';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst MostPopular = ({ posts }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n        <div id=\"mostPopularSection\">\r\n        <Box sx={{fontFamily: 'Arial, sans-serif', bgcolor: theme.palette.primary.main, borderRadius: 5, margin: 5, display: 'flex', width: '90%'}}>\r\n          <Typography sx={{ p: 1, flexGrow: 1}} style={{ fontSize: '20pt', fontWeight: 'bold', justifyContent: 'center', width: '100%'}} align=\"center\">Most Popular</Typography></Box>\r\n        <List sx={{marginTop: 5, marginRight: 5, marginLeft: 5, width: '90%'}} style={{ maxHeight: '100%', overflow: 'auto'}}>\r\n            {posts.map((post, index) => (\r\n                <ExploreCard key={ index } post={ post }/>\r\n            ))}\r\n        </List>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MostPopular;","import { ExploreCard } from './ExploreCard';\r\nimport List from '@mui/material/List';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst NotPublished = ({ posts }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n        <div id=\"unpublishedSection\">\r\n            <Box sx={{fontFamily: 'Arial, sans-serif', bgcolor: theme.palette.primary.main, borderRadius: 5, margin: 5, display: 'flex', width: '90%'}}>\r\n          <Typography sx={{ p: 1, flexGrow: 1}} style={{ fontSize: '20pt', fontWeight: 'bold', justifyContent: 'center', width: '90%'}} align=\"center\">Unpublished</Typography></Box>\r\n        <List sx={{marginTop: 5, marginRight: 5, marginLeft: 5, width: '90%'}} style={{flexDirection: 'row'}}>\r\n            {posts.map((post, index) => (\r\n                <ExploreCard key={ index } post={ post }/>\r\n            ))}\r\n        </List>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotPublished;","import { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AuthContext from '../auth';\r\nimport { GlobalStoreContext } from '../store'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Menu from '@mui/material/Menu';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport Stack from '@mui/material/Stack';\r\nimport SearchToolbar from './SearchToolbar'\r\nimport CreatePostButton from './CreatePostButton'\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\nimport Icon from '@mui/material/Icon';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport { AddBox, Unpublished } from '@mui/icons-material';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\nimport MostPopular from './MostPopular';\r\nimport NotPublished from './NotPublished';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nexport default function ProfileScreen() {\r\n    const { auth } = useContext(AuthContext);\r\n    const { store } = useContext(GlobalStoreContext);\r\n\r\n    const [editActive, setEditActive] = useState(false);\r\n    const [bio, setBio] = useState(\"CS Professor at Stony Brook University and literature lover. Also rank 1 in Starcraft.\");\r\n    const theme = useTheme();\r\n\r\n    const examplePost = {\r\n        title: 'Example Title',\r\n        author: 'Example Author',\r\n        published: 'Example Published',\r\n        description: 'Example Description',\r\n        likes: '100',\r\n        dislikes: '23',\r\n        imageUrl: 'https://st2.depositphotos.com/3765753/5349/v/600/depositphotos_53491489-stock-illustration-example-rubber-stamp-vector-over.jpg'\r\n    }\r\n    const sampleList = [examplePost, examplePost, examplePost, examplePost, examplePost, examplePost, examplePost];\r\n\r\n    const handleEditProfile = () => {\r\n        setEditActive(!editActive);\r\n    }\r\n\r\n    const handleDiscard = () => {\r\n        setEditActive(!editActive);\r\n    }\r\n\r\n    const handleBioChange = (e) => {\r\n        setBio(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-row\" style={{maxHeight: '90%', maxWidth: '100%', topMargin: '5%'}}>\r\n            <div style={{textAlign: 'center', alignContent: 'center', width: '25%', paddingTop: '10%'}}>\r\n                <div className=\"image-overlay-container\">\r\n                    <img\r\n                        style={{borderRadius: '50%', height: '300px', width: '300px'}}\r\n                        src={`https://i.picsum.photos/id/1064/300/300.jpg?hmac=x2Qoo-SsJIdhmNkLPrIFXDRsuEAd0ITP-T5pwIt_4yY`}\r\n                        srcSet={`https://i.picsum.photos/id/1064/300/300.jpg?hmac=x2Qoo-SsJIdhmNkLPrIFXDRsuEAd0ITP-T5pwIt_4yY`}\r\n                    />\r\n                    {\r\n                        editActive ?\r\n                        <button className=\"image-overlay-button\">Edit Image</button>\r\n                        : \"\"\r\n                    }\r\n                </div>\r\n                <Typography variant='h5' sx={{marginTop: '20px'}}><strong>TheMcKillaGorilla</strong></Typography>\r\n                <Typography variant='h7' sx={{display: 'block', marginTop: '20px'}}><strong>140k</strong> Followers</Typography>\r\n                {\r\n                    editActive ? \r\n                        <TextareaAutosize\r\n                        maxRows={4}\r\n                        defaultValue={bio}\r\n                        style={{ width: 200, display: 'block' }}\r\n                        className=\"profile-bio\"\r\n                        onChange={handleBioChange}\r\n                        /> :\r\n                        <Typography className=\"profile-bio\" sx={{display: 'block', marginTop: '20px', margin: 'auto', marginBottom: '20px'}}>{bio}</Typography>\r\n                }\r\n                {\r\n                    editActive ? \r\n                    <Button onClick={handleDiscard} variant='contained' sx={{display: 'block', marginTop: '20px'}}>Discard</Button>\r\n                    : \"\"\r\n                }\r\n                <Button onClick={handleEditProfile} variant='contained' sx={{display: 'block', marginTop: '20px'}}>{editActive ? \"Save\" : \"Edit Profile\"}</Button>\r\n            </div>\r\n            <div style={{textAlign: 'center', alignContent: 'center', width: '37.5%', maxHeight: '100%', overflowY: 'scroll'}}>\r\n                <MostPopular posts={sampleList}/>\r\n            </div>\r\n            <div style={{textAlign: 'center', alignContent: 'center', width: '37.5%', maxHeight: '100%', overflowY: 'scroll'}}>\r\n                <NotPublished posts={sampleList}/>\r\n            </div>\r\n        </div>\r\n        // <Box sx={{backgroundImage: 'public/data/_117883014_gorilla_dianfosseygorillafund1.jpg', backgroundSize: 'contain', borderRadius: '50%', height: '200px', width: '1200px'}}>TEST</Box>\r\n    );\r\n\r\n}","import { createTheme, responsiveFontSizes } from '@mui/material/styles'\r\n\r\nexport const storyTheme = responsiveFontSizes(createTheme({\r\n    palette: {\r\n        primary: {                \r\n            light: '#a5a6f6',\r\n            main: '#7878f1',\r\n            dark: '#331bd8'\r\n        },\r\n        secondary: {\r\n            light: '#ffab6c',\r\n            main: '#ff9647',\r\n            dark: '#d84f00'\r\n        }\r\n    },\r\n    components: {\r\n        div: {\r\n            p: 100\r\n        }\r\n    }\r\n}));\r\n\r\nexport const comicTheme = responsiveFontSizes(createTheme({\r\n    palette: {\r\n        primary: {                \r\n            light: '#ffab6c',\r\n            main: '#ff9647',\r\n            dark: '#d84f00'\r\n        },\r\n        secondary: {\r\n            light: '#a5a6f6',\r\n            main: '#7878f1',\r\n            dark: '#331bd8'\r\n        }\r\n    }\r\n}));","import './App.css';\r\nimport { React } from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { AuthContextProvider } from './auth';\r\nimport { GlobalStoreContextProvider } from './store'\r\nimport {\r\n    AppBanner,\r\n    HomeScreen,\r\n    HomeWrapper,\r\n    RegisterScreen,\r\n    LoginScreen,\r\n    ProfileScreen,\r\n    WorkspaceScreen,\r\n    ModalAlert,\r\n    ModalDelete\r\n} from './components'\r\nimport useStyles from './styling/styles';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { storyTheme, comicTheme } from './styling/themes';\r\nimport { useState } from 'react';\r\n\r\n/*\r\n    This is our application's top-level component.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n/*\r\n  This is the entry-point for our application. Notice that we\r\n  inject our store into all the components in our application.\r\n  \r\n  @author McKilla Gorilla\r\n*/\r\n\r\nconst App = () => {\r\n    \r\n    const theme = comicTheme; //use story theme for now\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <AuthContextProvider>\r\n                <GlobalStoreContextProvider>  \r\n                    <ThemeProvider theme = {theme}>\r\n                    <ModalDelete /> \r\n                    <ModalAlert />           \r\n                    <AppBanner />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={HomeScreen} />\r\n                        <Route path=\"/register/\" exact component={RegisterScreen} />\r\n                        <Route path=\"/login/\" exact component={LoginScreen} />\r\n                        <Route path=\"/top5list/:id\" exact component={WorkspaceScreen} />\r\n                        <Route path=\"/profile\" exact component={ProfileScreen} />\r\n                    </Switch>\r\n                    {/* <Statusbar /> */}\r\n                    </ThemeProvider>\r\n                </GlobalStoreContextProvider>\r\n            </AuthContextProvider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import { AuthContextProvider } from './auth';\r\nimport reportWebVitals from './reportWebVitals';\r\n/*\r\n  This is the entry-point for our application. Notice that we\r\n  inject our store into all the components in our application.\r\n  \r\n  @author McKilla Gorilla\r\n*/\r\n/*import { GlobalStoreContext, useGlobalStore } from './store'\r\nconst AppWrapper = () => {\r\n  const store = useGlobalStore();\r\n  return (\r\n    <GlobalStoreContext.Provider value={store}>\r\n      <App />\r\n    </GlobalStoreContext.Provider>\r\n  )\r\n}*/\r\nReactDOM.render(\r\n  <React.StrictMode>  \r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}